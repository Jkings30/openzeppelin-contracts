{"abi":[{"type":"error","name":"MerkleProofInvalidMultiproof","inputs":[]}],"bytecode":{"object":"0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41d0ce46bd0764523cfa1da90ddd4fd87e1ceaf77fee602880b5077afd7546764736f6c634300081b0033","sourceMap":"803:8769:187:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;803:8769:187;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e41d0ce46bd0764523cfa1da90ddd4fd87e1ceaf77fee602880b5077afd7546764736f6c634300081b0033","sourceMap":"803:8769:187:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MerkleProofInvalidMultiproof\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"errors\":{\"MerkleProofInvalidMultiproof()\":[{\"details\":\"The multiproof provided is not valid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin/=contracts/\"]},\"sources\":{\"contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x3a83e9619d086e3dd342df938cda382c87c90e6e571ec7ebd98dfb45ffeefd06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a87cabd5a0be7905919f62c76f2d915322a30c8ecc485d7b531cd5d00c130b\",\"dweb:/ipfs/QmdS9S7n69H3pKQEhefWL2NPT1xvDyY59rTqZpDLhAtrxX\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"MerkleProofInvalidMultiproof"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@ensdomains/=node_modules/@ensdomains/","@openzeppelin/=node_modules/@openzeppelin/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","openzeppelin/=contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/cryptography/MerkleProof.sol":"MerkleProof"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/utils/cryptography/MerkleProof.sol":{"keccak256":"0x3a83e9619d086e3dd342df938cda382c87c90e6e571ec7ebd98dfb45ffeefd06","urls":["bzz-raw://53a87cabd5a0be7905919f62c76f2d915322a30c8ecc485d7b531cd5d00c130b","dweb:/ipfs/QmdS9S7n69H3pKQEhefWL2NPT1xvDyY59rTqZpDLhAtrxX"],"license":"MIT"}},"version":1},"id":187}